alias la="ls -la --color=auto"
alias zshrc="$EDITOR ~/.zshrc"
alias shortcutrc="$EDITOR ~/.config/shortcutrc"
alias aliasrc="$EDITOR ~/.config/aliasrc"

if [ "$(uname)" = "Linux" ]; then 
	if [ "$HOST" = "naomi-pc" ]; then
		alias syncmusic="rsync -avzP --delete -e ssh /music/ naomi@192.168.1.100:/music/"
	fi
fi

function dotupdate() {
	(
		cd "$(dirname "$(realpath $HOME/.zshrc)")"
		git add .
		git commit -m "Update dotfiles"
		git push
	)
}

function dotpull() {
	(
		cd $(dirname $(realpath $HOME/.zshrc))
		git pull
	)
}

function mvtodot() {
	(
		dotdir="$(dirname "$(realpath "$HOME/.zshrc")")"
		thingdir="$(realpath "$1")"
		reltohome="${thingdir#"$HOME"/}"
		destination="${dotdir}/${reltohome}"

		case "$reltohome" in
			"."*) destination="${dotdir}/dot-${reltohome:1}";;
			*) ;;
		esac
		
		if [ "$thingdir" = "$reltohome" ]; then
			exit 1
		fi

		mkdir -p "$(dirname "$destination")"
		mv "$thingdir" "$destination"
		ln -s "$destination" "$thingdir"
	)
}

function zshupdate(){
	(for DIR in "$HOME/.zsh/plugins/"*/; do
		cd "$DIR" &&
		git pull
	done)
}

function ts-init() {
	if [ -z "$1" ]; then
		1="."
	fi

	git clone --depth=1 https://github.com/NyaomiDEV/naomi-ts-template "$1" && rm -rf "$1/.git" && cd "$1" && yarn
}

function watch-sync() {
  watch -n1 'grep -E "(Dirty|Write)" /proc/meminfo; echo; ls /sys/block/ | while read device; do awk "{ print \"$device: \"  \$9 }" "/sys/block/$device/stat"; done'
}

function transfer() {
	if [ $# -eq 0 ]; then
		echo "No arguments specified.\nUsage:\n transfer <file|directory>\n ... | transfer <file_name>" >&2 ;
		return 1;
	fi;
	if tty -s; then
		file="$1";
		file_name=$(basename "$file");
		if [ ! -e "$file" ]; then
			echo "$file: No such file or directory" >&2;
			return 1;
		fi;

		if [ -d "$file" ]; then
			file_name="$file_name.zip" ,;
			(cd "$file" && zip -r -q - .) | curl --progress-bar --upload-file "-" "https://transfer.sh/$file_name" | tee /dev/null,;
		else
			cat "$file" | curl --progress-bar --upload-file "-" "https://transfer.sh/$file_name" | tee /dev/null;
		fi;
	else
		file_name=$1;
		curl --progress-bar --upload-file "-" "https://transfer.sh/$file_name" | tee /dev/null;
	fi;
}

function screencast_reload() {
	qdbus org.kde.KWin /Plugins org.kde.KWin.Plugins.UnloadPlugin screencast
	qdbus org.kde.KWin /Plugins org.kde.KWin.Plugins.LoadPlugin screencast
}

function smapi() {
	steamfolders=( $(cat "$HOME/.local/share/Steam/steamapps/libraryfolders.vdf" | grep "path" | tr -s $'\t' | cut -f 3 | tr -d '"') )

	executable="$(find ${steamfolders[@]} -type f -name "StardewModdingAPI")"

	if [ -z "$executable" ]; then
		echo "Cannot find SMAPI anywhere inside your Steam games"
		return
	fi
	
	if [ -n "$1" ]; then
		"$executable" --mods-folder "$1"
	else
		"$executable"
	fi
}
